/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author admin
 */
public class DictionaryApplication extends javax.swing.JFrame {

    private final Dictionary dict;
    DefaultListModel listModel = new DefaultListModel();
    TextToSpeech tts = new TextToSpeech();
    /**
     * Creates new form DictionaryApplication
     */
    public DictionaryApplication() {
      initComponents();
        dict = new Dictionary();
        dict.insertFromFile();
        //listModel = ;
        
        for (Word word : dict.words) {
            listModel.addElement(word.getWord_target());
        }
        wordList.setModel(listModel);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        wordList = new javax.swing.JList<>();
        JScrollPane2 = new javax.swing.JScrollPane();
        txtExplan = new javax.swing.JEditorPane();
        txtInputWord = new javax.swing.JTextField();
        voiceButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addWordButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        modifyButton = new javax.swing.JButton();
        TitleLable = new javax.swing.JLabel();


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EN-VN DICTIONARY");
        //setBackground(new java.awt.Color(5, 76, 175));
        setFocusable(false);
        setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        ImageIcon logo = new ImageIcon(getClass().getResource("book.png"));
        setIconImage(logo.getImage());
        setResizable(false);
        setLocation(400,100);
        getContentPane().setBackground(new java.awt.Color(34, 114, 236, 171));

        /** ghi lai vao file truoc khi dong chuong trinh.*/
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                // The window is closing
                try {
                    dict.writeToFile();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        });

        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        wordList.setBackground(new java.awt.Color(204, 255, 255));
        wordList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        //wordList.setForeground(new java.awt.Color(0, 0, 0));
        wordList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        wordList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                wordListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(wordList);

        JScrollPane2.setForeground(new java.awt.Color(204, 255, 255));
        JScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtExplan.setEditable(false);
        txtExplan.setBackground(new java.awt.Color(255, 255, 255));
        txtExplan.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        JScrollPane2.setViewportView(txtExplan);

        txtInputWord.setBackground(new java.awt.Color(204, 255, 255));
        txtInputWord.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtInputWord.setForeground(new java.awt.Color(0, 0, 0));
        txtInputWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputWordActionPerformed(evt);
            }
        });
        txtInputWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInputWordKeyReleased(evt);
            }
        });

        voiceButton.setBackground(new java.awt.Color(0, 204, 153, 182));
       // ImageIcon voiceIcon = new ImageIcon("EVdiresources\\voice.png");//"src/resources/voice.png");
        ImageIcon voiceIcon = new ImageIcon(getClass().getResource("voice.png"));
        voiceButton.setIcon(voiceIcon); // NOI18N
        voiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voiceButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(0, 204, 153, 197));
        ImageIcon delIcon = new ImageIcon(getClass().getResource("trash.png"));
        deleteButton.setIcon(delIcon); // NOI18N
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        addWordButton.setBackground(new java.awt.Color(0, 204, 153, 199));
        ImageIcon addIcon = new ImageIcon(getClass().getResource("/addWord.png"));
        addWordButton.setIcon(addIcon); // NOI18N
        addWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordButtonActionPerformed(evt);
            }
        });

        SearchButton.setBackground(new java.awt.Color(153, 255, 255));
        SearchButton.setForeground(new java.awt.Color(204, 255, 255));
        ImageIcon searchIcon = new ImageIcon(getClass().getResource("search.png"));
        SearchButton.setIcon(searchIcon); // NOI18N
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        modifyButton.setBackground(new java.awt.Color(0, 204, 153, 186));
        ImageIcon modifyIcon = new ImageIcon(getClass().getResource("pen.png"));
        modifyButton.setIcon(modifyIcon); // NOI18N
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        //TitleLable.setBackground(new java.awt.Color(51, 102, 255));
        TitleLable.setFont(new java.awt.Font("Segoe UI Black", 3, 28)); // NOI18N
        TitleLable.setText("Từ điển Anh - Việt");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtInputWord, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(voiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addWordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(TitleLable)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TitleLable, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInputWord)
                    .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addWordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(voiceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wordListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_wordListValueChanged
        int index = wordList.getSelectedIndex();
        System.err.println(index);
        if (index != -1) {
            txtExplan.setContentType("text/html");
            txtExplan.setText(dict.words.get(index).getWord_explain());
            txtExplan.setCaretPosition(0);
        }
    }//GEN-LAST:event_wordListValueChanged

    private void txtInputWordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputWordKeyReleased
        int index = dict.preBinarySearch(txtInputWord.getText());
        wordList.setSelectedIndex(index);
        wordList.ensureIndexIsVisible(index);
    }//GEN-LAST:event_txtInputWordKeyReleased

    private void txtInputWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputWordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInputWordActionPerformed

    private void voiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voiceButtonActionPerformed
        int index = wordList.getSelectedIndex();
        if (index == -1) {
            return;
        }
       String tar = wordList.getSelectedValue();
       tts.speakText(tar);
    }//GEN-LAST:event_voiceButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String value = txtInputWord.getText().toLowerCase().trim();
        int index = dict.binarySearch(value);
        if (index == -1) {
            return;
        } else {
            wordList.setSelectedIndex(index);
            wordList.ensureIndexIsVisible(index);
            txtExplan.setText(dict.words.get(index).getWord_explain());
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void addWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordButtonActionPerformed
        AddWord addWord = new AddWord(dict, wordList);
        addWord.setVisible(true);
    }//GEN-LAST:event_addWordButtonActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        int index = wordList.getSelectedIndex();
        if (index < 0 ) {
            return;
        }
        ModifyWord modifyWord = new ModifyWord(dict,index,txtExplan);
        modifyWord.setVisible(true);
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        DefaultListModel mod = (DefaultListModel) wordList.getModel();
        int index = wordList.getSelectedIndex();
        if (index != -1) {
            dict.removeWord(index);
            mod.remove(index);
            txtExplan.setContentType("text");
            txtExplan.setText("");
            txtExplan.setContentType("text/html");
            JOptionPane.showMessageDialog(null,"Xoá từ thành công","Delete Word!", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DictionaryApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane2;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel TitleLable;
    private javax.swing.JButton addWordButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifyButton;
    private javax.swing.JEditorPane txtExplan;
    private javax.swing.JTextField txtInputWord;
    private javax.swing.JButton voiceButton;
    private javax.swing.JList<String> wordList;
    // End of variables declaration//GEN-END:variables
}
